//=============================================================================
// FileName : Live2DManager.h
// Author：SHUN SAKAI
// 内容：ポリゴン関連の処理
//=============================================================================
#ifndef _LIVE_2D_MANAGER_H_
#define _LIVE_2D_MANAGER_H_
//*****************************************************************************
// Include
//*****************************************************************************
#include "d3dx9.h"

//*****************************************************************************
// Macro
//*****************************************************************************

//*****************************************************************************
// ForwardDeclaration
//*****************************************************************************
class Live2DModel;
class RenderTarget;

//*****************************************************************************
// class
//*****************************************************************************
class Live2DManager
{
public:
	enum MOTIN_TYPE
	{
		IDLE_0 = 0,
		IDLE_1,
		IDLE_2,
		MOTION_1,
		MOTION_2,
		MOTION_3,
		MOTION_4,
		MOTION_5,
		MOTION_6,
		MOTION_7,
		MOTION_8,
		MOTION_9,

	};
	enum EX_MOTIN_TYPE
	{
		EX_MOTION_1 = 0,
		EX_MOTION_2,
		EX_MOTION_3,
		EX_MOTION_4,
		EX_MOTION_5,
		EX_MOTION_6,
		EX_MOTION_7,
		EX_MOTION_8,
		EX_MOTION_9,

	};
	//=============================================================================
	// FunctionName: Constructor
	// Param: void
	// ReturnValue: void
	// Content: 全てのメンバ変数はここで初期化をしておくこと
	//=============================================================================
	Live2DManager();
	//=============================================================================
	// FunctionName: Destructor
	// Param: void
	// ReturnValue: void
	// Content: 各種動的に確保したバッファなどの開放処理を行う
	//=============================================================================
	~Live2DManager();

	//=============================================================================
	// FuncName: Init
	// ParamValue: DirectXデバイス
	// Content: 初期化
	//=============================================================================
	bool Init(LPDIRECT3DDEVICE9 paramDevice);

	//=============================================================================
	// FunctionName: Update
	// Param: なし
	// ReturnValue: void
	// Content: 更新
	//=============================================================================
	void Update();

	//=============================================================================
	// FunctionName: Draw
	// Param: DirectXデバイス
	// ReturnValue: void
	// Content: 描画
	//=============================================================================
	void Draw(LPDIRECT3DDEVICE9 paramDevice);

	//=============================================================================
	// FunctionName: GetModTex
	// Param: どのキャラのモデルのテクスチャにするかの識別用
	// ReturnValue: テクスチャバッファ
	// Content: Live2Dモデルが描画されたテクスチャの取得
	//=============================================================================
	LPDIRECT3DTEXTURE9 GetModTex(int paramModState);

	//=============================================================================
	// FunctionName: SetMotion
	// Param: どのモデルのモーションを再生するかの識別子
	// Param: どのモデルのモーションを再生するかの識別子
	// ReturnValue: void
	// Content: 指定したモデルのモーションの再生
	//			※再生終了後に待機モーションに戻ります
	//=============================================================================
	void SetMotion(int paramModState, int pramMotionState);

	//=============================================================================
	// FunctionName: SetExMotion
	// Param: どのモデルの表情モーションを再生するかの識別子
	// Param: どのモデルの表情モーションを再生するかの識別子
	// ReturnValue: void
	// Content: 指定した表情モデルのモーションの再生
	//			※再生終了後に待機モーションに戻ります
	//=============================================================================
	void SetExMotion(int paramModState, int pramExMotionState);

	//=============================================================================
	// FunctionName: DrawStart
	// Param: どのモデルの描画をするかの識別子
	// ReturnValue: void
	// Content: 指定したモデルの描画開始
	//=============================================================================
	void SetDrawStart(int paramparamModState);

	//=============================================================================
	// FunctionName: DrawEnd
	// Param: void
	// ReturnValue: void
	// Content: 指定したモデルの描画終了
	//=============================================================================
	void SetDrawEnd(int paramparamModState);

private:
	Live2DModel* mod;
	RenderTarget* modRender;

};
#endif// _LIVE_2D_MANAGER_H_
//EOF